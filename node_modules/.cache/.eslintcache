[{"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\index.js":"1","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\reportWebVitals.js":"2","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\App.js":"3","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\SellNFT.js":"4","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\NFTpage.js":"5","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Marketplace.js":"6","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Profile.js":"7","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Navbar.js":"8","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\pinata.js":"9","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\NFTTile.js":"10"},{"size":1120,"mtime":1668754837832,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1668754837835,"results":"13","hashOfConfig":"12"},{"size":770,"mtime":1668754837808,"results":"14","hashOfConfig":"12"},{"size":6317,"mtime":1669361055943,"results":"15","hashOfConfig":"12"},{"size":4069,"mtime":1669704628108,"results":"16","hashOfConfig":"12"},{"size":2846,"mtime":1669536129303,"results":"17","hashOfConfig":"12"},{"size":3499,"mtime":1669088995303,"results":"18","hashOfConfig":"12"},{"size":4623,"mtime":1668862095216,"results":"19","hashOfConfig":"12"},{"size":2654,"mtime":1668754837834,"results":"20","hashOfConfig":"12"},{"size":816,"mtime":1668862191881,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"1w39j1r",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"26"},"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\index.js",["58"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport SellNFT from './components/SellNFT';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport NFTPage from './components/NFTpage';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Marketplace />}/>\r\n        <Route path=\"/sellNFT\" element={<SellNFT />}/> \r\n        <Route path=\"/nftPage/:tokenId\" element={<NFTPage />}/>        \r\n        <Route path=\"/profile\" element={<Profile />}/> \r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\reportWebVitals.js",[],[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\App.js",["59","60","61"],[],"import './App.css';\r\nimport Navbar from './components/Navbar.js';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport SellNFT from './components/SellNFT';\r\nimport NFTPage from './components/NFTpage';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Marketplace />}/>\r\n          <Route path=\"/nftPage\" element={<NFTPage />}/>        \r\n          <Route path=\"/profile\" element={<Profile />}/>\r\n          <Route path=\"/sellNFT\" element={<SellNFT />}/>             \r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\SellNFT.js",["62"],[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\NFTpage.js",["63","64","65","66"],[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Profile.js",["67","68"],[],"import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile() {\r\n  const [data, updateData] = useState([]);\r\n  const [dataFetched, updateFetched] = useState(false);\r\n  const [address, updateAddress] = useState(\"0x\");\r\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n  async function getNFTData(tokenId) {\r\n    const ethers = require(\"ethers\");\r\n    let sumPrice = 0;\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(\r\n      MarketplaceJSON.address,\r\n      MarketplaceJSON.abi,\r\n      signer\r\n    );\r\n\r\n    //create an NFT Token\r\n    let transaction = await contract.getMyNFTs();\r\n\r\n    /*\r\n     * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n     * and creates an object of information that is to be displayed\r\n     */\r\n\r\n    const items = await Promise.all(\r\n      transaction.map(async (i) => {\r\n        const tokenURI = await contract.tokenURI(i.tokenId);\r\n        let meta = await axios.get(tokenURI);\r\n        meta = meta.data;\r\n\r\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n        let item = {\r\n          price,\r\n          tokenId: i.tokenId.toNumber(),\r\n          seller: i.seller,\r\n          owner: i.owner,\r\n          image: meta.image,\r\n          name: meta.name,\r\n          description: meta.description,\r\n        };\r\n        sumPrice += Number(price);\r\n        return item;\r\n      })\r\n    );\r\n\r\n    updateData(items);\r\n    updateFetched(true);\r\n    updateAddress(addr);\r\n    updateTotalPrice(sumPrice.toPrecision(3));\r\n  }\r\n\r\n  const params = useParams();\r\n  const tokenId = params.tokenId;\r\n  if (!dataFetched) getNFTData(tokenId);\r\n\r\n  return (\r\n    <div className=\"profileClass\" style={{ \"min-height\": \"100vh\" }}>\r\n      <Navbar></Navbar>\r\n      <div className=\"profileClass\">\r\n        <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n          <div className=\"mb-5\">\r\n            <h2 className=\"font-bold\">Wallet Address</h2>\r\n            {address}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n          <div>\r\n            <h2 className=\"font-bold\">No. of NFTs</h2>\r\n            {data.length}\r\n          </div>\r\n          <div className=\"ml-20\">\r\n            <h2 className=\"font-bold\">Total Value</h2>\r\n            {totalPrice} ETH\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n          <h2 className=\"font-bold\">Your NFTs</h2>\r\n          <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n            {data.map((value, index) => {\r\n              return <NFTTile data={value} key={index}></NFTTile>;\r\n            })}\r\n          </div>\r\n          <div className=\"mt-10 text-xl\">\r\n            {data.length == 0\r\n              ? \"Oops, No NFT data to display (Are you logged in?)\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\Navbar.js",["69","70","71","72","73","74","75"],[],"import logo from \"../logo_3.png\";\r\nimport fullLogo from \"../full_logo.png\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nfunction Navbar() {\r\n  const [connected, toggleConnect] = useState(false);\r\n  const location = useLocation();\r\n  const [currAddress, updateAddress] = useState(\"0x\");\r\n\r\n  async function getAddress() {\r\n    const ethers = require(\"ethers\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n    updateAddress(addr);\r\n  }\r\n\r\n  function updateButton() {\r\n    const ethereumButton = document.querySelector(\".enableEthereumButton\");\r\n    ethereumButton.textContent = \"Connected\";\r\n    ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n    ethereumButton.classList.remove(\"bg-blue-500\");\r\n    ethereumButton.classList.add(\"hover:bg-green-70\");\r\n    ethereumButton.classList.add(\"bg-green-500\");\r\n  }\r\n\r\n  async function connectWebsite() {\r\n    const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\r\n    if (chainId !== \"0x5\") {\r\n      //alert('Incorrect network! Switch your metamask network to Rinkeby');\r\n      await window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0x5\" }],\r\n      });\r\n    }\r\n    await window.ethereum\r\n      .request({ method: \"eth_requestAccounts\" })\r\n      .then(() => {\r\n        updateButton();\r\n        console.log(\"here\");\r\n        getAddress();\r\n        window.location.replace(location.pathname);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let val = window.ethereum.isConnected();\r\n    if (val) {\r\n      console.log(\"here\");\r\n      getAddress();\r\n      toggleConnect(val);\r\n      updateButton();\r\n    }\r\n\r\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n      window.location.replace(location.pathname);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"w-screen\">\r\n        <ul className=\"flex items-end justify-between py-3 bg-transparent text-white pr-5\">\r\n          <li className=\"flex items-end ml-5 pb-2\">\r\n            <Link to=\"/\">\r\n              <img\r\n                src={fullLogo}\r\n                alt=\"\"\r\n                width={120}\r\n                height={120}\r\n                className=\"inline-block -mt-2\"\r\n              />\r\n              <div className=\"inline-block font-bold text-xl ml-2\">\r\n                NFT Marketplace\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          <li className=\"w-2/6\">\r\n            <ul className=\"lg:flex justify-between font-bold mr-10 text-lg\">\r\n              {location.pathname === \"/\" ? (\r\n                <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/\">Marketplace</Link>\r\n                </li>\r\n              ) : (\r\n                <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/\">Marketplace</Link>\r\n                </li>\r\n              )}\r\n              {location.pathname === \"/sellNFT\" ? (\r\n                <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/sellNFT\">List My NFT</Link>\r\n                </li>\r\n              ) : (\r\n                <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/sellNFT\">List My NFT</Link>\r\n                </li>\r\n              )}\r\n              {location.pathname === \"/profile\" ? (\r\n                <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/profile\">Profile</Link>\r\n                </li>\r\n              ) : (\r\n                <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                  <Link to=\"/profile\">Profile</Link>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <button\r\n                  className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                  onClick={connectWebsite}\r\n                >\r\n                  {connected ? \"Connected\" : \"Connect Wallet\"}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"text-white text-bold text-right mr-10 text-sm\">\r\n        {currAddress !== \"0x\"\r\n          ? \"Connected to\"\r\n          : \"Not Connected. Please login to view NFTs\"}{\" \"}\r\n        {currAddress !== \"0x\" ? currAddress.substring(0, 15) + \"...\" : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\pinata.js",[],[],"C:\\Users\\Kritarth Bansal\\OneDrive\\Desktop\\Nft-marketplace\\src\\components\\NFTTile.js",["76","77"],[],"import axie from \"../tile.jpeg\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nfunction NFTTile(data) {\r\n  const newTo = {\r\n    pathname: \"/nftPage/\" + data.data.tokenId,\r\n  };\r\n  return (\r\n    <Link to={newTo}>\r\n      <div className=\"border-2 ml-12 mt-5 mb-12 flex flex-col items-center rounded-lg w-48 md:w-72 shadow-2xl\">\r\n        <img\r\n          src={data.data.image}\r\n          alt=\"\"\r\n          className=\"w-72 h-80 rounded-lg object-cover\"\r\n        />\r\n        <div className=\"text-white w-full p-2 bg-gradient-to-t from-[#454545] to-transparent rounded-lg pt-5 -mt-20\">\r\n          <strong className=\"text-xl\">{data.data.name}</strong>\r\n          <p className=\"display-inline\">{data.data.description}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default NFTTile;\r\n",{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"83","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":16},{"ruleId":"78","severity":1,"message":"85","line":16,"column":9,"nodeType":"80","messageId":"81","endLine":16,"endColumn":17},{"ruleId":"78","severity":1,"message":"86","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":12},{"ruleId":"78","severity":1,"message":"87","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":100,"column":26,"nodeType":"90","messageId":"91","endLine":100,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":100,"column":55,"nodeType":"90","messageId":"91","endLine":100,"endColumn":57},{"ruleId":"78","severity":1,"message":"87","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":96,"column":26,"nodeType":"90","messageId":"91","endLine":96,"endColumn":28},{"ruleId":"78","severity":1,"message":"92","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"93","line":4,"column":20,"nodeType":"80","messageId":"81","endLine":4,"endColumn":26},{"ruleId":"78","severity":1,"message":"94","line":5,"column":3,"nodeType":"80","messageId":"81","endLine":5,"endColumn":9},{"ruleId":"78","severity":1,"message":"95","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":8},{"ruleId":"78","severity":1,"message":"96","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":16},{"ruleId":"78","severity":1,"message":"97","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":55,"column":3,"nodeType":"80","endLine":55,"endColumn":12,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"86","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"93","line":2,"column":27,"nodeType":"80","messageId":"81","endLine":2,"endColumn":33},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'location' is assigned a value but never used.","'axie' is defined but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logo' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'toggleConnect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname] as a second argument to the useEffect Hook.",["101"],{"desc":"102","fix":"103"},"Add dependencies array: [location.pathname]",{"range":"104","text":"105"},[2045,2045],", [location.pathname]"]